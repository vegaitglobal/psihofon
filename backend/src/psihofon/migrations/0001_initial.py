# Generated by Django 3.2.7 on 2021-09-26 15:56

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.contrib.postgres.fields.citext
import django.core.validators
from django.contrib.postgres.operations import CITextExtension
from django.db import migrations, models
import django.utils.timezone
import simple_history.models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        CITextExtension(),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False,
                                                     help_text='Designates that this user has all permissions without explicitly assigning them.',
                                                     verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'},
                                              help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.',
                                              max_length=150, unique=True,
                                              validators=[django.contrib.auth.validators.UnicodeUsernameValidator()],
                                              verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False,
                                                 help_text='Designates whether the user can log into this admin site.',
                                                 verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True,
                                                  help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.',
                                                  verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', django.contrib.postgres.fields.citext.CIEmailField(db_index=True, max_length=254, unique=True,
                                                                             verbose_name='email')),
                ('groups', models.ManyToManyField(blank=True,
                                                  help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.',
                                                  related_name='user_set', related_query_name='user', to='auth.Group',
                                                  verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.',
                                                            related_name='user_set', related_query_name='user',
                                                            to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='CrisisExercise',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='naslov')),
                ('title_sr_latn', models.CharField(max_length=255, null=True, verbose_name='naslov')),
                ('description', models.TextField(verbose_name='opis')),
                ('description_sr_latn', models.TextField(null=True, verbose_name='opis')),
            ],
            options={
                'verbose_name': 'Vežba za krizno stanje',
                'verbose_name_plural': 'Vežbe za krizno stanje',
            },
        ),
        migrations.CreateModel(
            name='MentalState',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='naziv')),
                ('name_sr_latn', models.CharField(max_length=255, null=True, verbose_name='naziv')),
                ('exercise_list_label', models.CharField(
                    help_text='Ovaj naslov će se koristiti pri prezentovanju liste vežbi ovog mentalnog stanja',
                    max_length=255, verbose_name='naslov za listu vežbi')),
                ('exercise_list_label_sr_latn', models.CharField(
                    help_text='Ovaj naslov će se koristiti pri prezentovanju liste vežbi ovog mentalnog stanja',
                    max_length=255, null=True, verbose_name='naslov za listu vežbi')),
            ],
            options={
                'verbose_name': 'Mentalno stanje',
                'verbose_name_plural': 'Mentalno stanje',
            },
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='naziv')),
                ('name_sr_latn', models.CharField(max_length=255, null=True, verbose_name='naziv')),
                ('city', models.CharField(max_length=255, verbose_name='grad')),
                ('city_sr_latn', models.CharField(max_length=255, null=True, verbose_name='grad')),
                ('website_url', models.URLField(blank=True, default='', verbose_name='link do sajta')),
            ],
            options={
                'verbose_name': 'Organizacija',
                'verbose_name_plural': 'Organizacije',
            },
        ),
        migrations.CreateModel(
            name='Questionnaire',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(verbose_name='opis')),
                ('description_sr_latn', models.TextField(null=True, verbose_name='opis')),
            ],
            options={
                'verbose_name': 'Upitnik',
                'verbose_name_plural': 'Upitnici',
            },
        ),
        migrations.CreateModel(
            name='SelfEmpowermentExercise',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='naslov')),
                ('title_sr_latn', models.CharField(max_length=255, null=True, verbose_name='naslov')),
                ('week_number', models.SmallIntegerField(verbose_name='redni broj nedelje')),
                ('preparation', models.TextField(verbose_name='priprema')),
                ('preparation_sr_latn', models.TextField(null=True, verbose_name='priprema')),
                ('description', models.TextField(verbose_name='opis')),
                ('description_sr_latn', models.TextField(null=True, verbose_name='opis')),
                ('explanation', models.TextField(blank=True, default='', verbose_name='objašnjenje')),
                (
                    'explanation_sr_latn',
                    models.TextField(blank=True, default='', null=True, verbose_name='objašnjenje')),
                ('duration_description', models.TextField(default='', verbose_name='učestalost rada')),
                ('duration_description_sr_latn',
                 models.TextField(default='', null=True, verbose_name='učestalost rada')),
            ],
            options={
                'verbose_name': 'Vežba za samoosnaživanje',
                'verbose_name_plural': 'Vežbe za samoosnaživanje',
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(verbose_name='tekst')),
                ('text_sr_latn', models.TextField(null=True, verbose_name='tekst')),
                ('order_number', models.SmallIntegerField(verbose_name='redni broj')),
                ('mental_state',
                 models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='psihofon.mentalstate',
                                   verbose_name='mentalno stanje')),
                ('questionnaire',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions',
                                   to='psihofon.questionnaire', verbose_name='upitnik')),
            ],
            options={
                'verbose_name': 'Pitanje',
                'verbose_name_plural': 'Pitanja',
            },
        ),
        migrations.CreateModel(
            name='MentalStateExercise',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='naslov')),
                ('title_sr_latn', models.CharField(max_length=255, null=True, verbose_name='naslov')),
                ('description', models.TextField(verbose_name='opis')),
                ('description_sr_latn', models.TextField(null=True, verbose_name='opis')),
                ('recommendation', models.TextField(blank=True, default='', verbose_name='preporuka')),
                ('recommendation_sr_latn',
                 models.TextField(blank=True, default='', null=True, verbose_name='preporuka')),
                ('mental_state',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exercises',
                                   to='psihofon.mentalstate', verbose_name='mentalno stanje')),
            ],
            options={
                'verbose_name': 'Vežba',
                'verbose_name_plural': 'Vežbe',
            },
        ),
        migrations.CreateModel(
            name='HistoricalUser',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False,
                                                     help_text='Designates that this user has all permissions without explicitly assigning them.',
                                                     verbose_name='superuser status')),
                ('username',
                 models.CharField(db_index=True, error_messages={'unique': 'A user with that username already exists.'},
                                  help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.',
                                  max_length=150,
                                  validators=[django.contrib.auth.validators.UnicodeUsernameValidator()],
                                  verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False,
                                                 help_text='Designates whether the user can log into this admin site.',
                                                 verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True,
                                                  help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.',
                                                  verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', django.contrib.postgres.fields.citext.CIEmailField(db_index=True, max_length=254,
                                                                             verbose_name='email')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type',
                 models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user',
                 models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+',
                                   to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical User',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalSelfEmpowermentExercise',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='naslov')),
                ('title_sr_latn', models.CharField(max_length=255, null=True, verbose_name='naslov')),
                ('week_number', models.SmallIntegerField(verbose_name='redni broj nedelje')),
                ('preparation', models.TextField(verbose_name='priprema')),
                ('preparation_sr_latn', models.TextField(null=True, verbose_name='priprema')),
                ('description', models.TextField(verbose_name='opis')),
                ('description_sr_latn', models.TextField(null=True, verbose_name='opis')),
                ('explanation', models.TextField(blank=True, default='', verbose_name='objašnjenje')),
                (
                    'explanation_sr_latn',
                    models.TextField(blank=True, default='', null=True, verbose_name='objašnjenje')),
                ('duration_description', models.TextField(default='', verbose_name='učestalost rada')),
                ('duration_description_sr_latn',
                 models.TextField(default='', null=True, verbose_name='učestalost rada')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type',
                 models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user',
                 models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+',
                                   to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Vežba za samoosnaživanje',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalQuestionnaire',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('description', models.TextField(verbose_name='opis')),
                ('description_sr_latn', models.TextField(null=True, verbose_name='opis')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type',
                 models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user',
                 models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+',
                                   to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Upitnik',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalQuestion',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('text', models.TextField(verbose_name='tekst')),
                ('text_sr_latn', models.TextField(null=True, verbose_name='tekst')),
                ('order_number', models.SmallIntegerField(verbose_name='redni broj')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type',
                 models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user',
                 models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+',
                                   to=settings.AUTH_USER_MODEL)),
                ('mental_state', models.ForeignKey(blank=True, db_constraint=False, null=True,
                                                   on_delete=django.db.models.deletion.DO_NOTHING, related_name='+',
                                                   to='psihofon.mentalstate', verbose_name='mentalno stanje')),
                ('questionnaire', models.ForeignKey(blank=True, db_constraint=False, null=True,
                                                    on_delete=django.db.models.deletion.DO_NOTHING, related_name='+',
                                                    to='psihofon.questionnaire', verbose_name='upitnik')),
            ],
            options={
                'verbose_name': 'historical Pitanje',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalOrganization',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='naziv')),
                ('name_sr_latn', models.CharField(max_length=255, null=True, verbose_name='naziv')),
                ('city', models.CharField(max_length=255, verbose_name='grad')),
                ('city_sr_latn', models.CharField(max_length=255, null=True, verbose_name='grad')),
                ('website_url', models.URLField(blank=True, default='', verbose_name='link do sajta')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type',
                 models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user',
                 models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+',
                                   to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Organizacija',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalMentalStateExercise',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='naslov')),
                ('title_sr_latn', models.CharField(max_length=255, null=True, verbose_name='naslov')),
                ('description', models.TextField(verbose_name='opis')),
                ('description_sr_latn', models.TextField(null=True, verbose_name='opis')),
                ('recommendation', models.TextField(blank=True, default='', verbose_name='preporuka')),
                ('recommendation_sr_latn',
                 models.TextField(blank=True, default='', null=True, verbose_name='preporuka')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type',
                 models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user',
                 models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+',
                                   to=settings.AUTH_USER_MODEL)),
                ('mental_state', models.ForeignKey(blank=True, db_constraint=False, null=True,
                                                   on_delete=django.db.models.deletion.DO_NOTHING, related_name='+',
                                                   to='psihofon.mentalstate', verbose_name='mentalno stanje')),
            ],
            options={
                'verbose_name': 'historical Vežba',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalMentalState',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='naziv')),
                ('name_sr_latn', models.CharField(max_length=255, null=True, verbose_name='naziv')),
                ('exercise_list_label', models.CharField(
                    help_text='Ovaj naslov će se koristiti pri prezentovanju liste vežbi ovog mentalnog stanja',
                    max_length=255, verbose_name='naslov za listu vežbi')),
                ('exercise_list_label_sr_latn', models.CharField(
                    help_text='Ovaj naslov će se koristiti pri prezentovanju liste vežbi ovog mentalnog stanja',
                    max_length=255, null=True, verbose_name='naslov za listu vežbi')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type',
                 models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user',
                 models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+',
                                   to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Mentalno stanje',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalCrisisExercise',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='naslov')),
                ('title_sr_latn', models.CharField(max_length=255, null=True, verbose_name='naslov')),
                ('description', models.TextField(verbose_name='opis')),
                ('description_sr_latn', models.TextField(null=True, verbose_name='opis')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type',
                 models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user',
                 models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+',
                                   to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Vežba za krizno stanje',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalAnswer',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('text', models.TextField(verbose_name='tekst')),
                ('text_sr_latn', models.TextField(null=True, verbose_name='tekst')),
                ('order_number', models.SmallIntegerField(validators=[django.core.validators.MinValueValidator(1),
                                                                      django.core.validators.MaxValueValidator(5)],
                                                          verbose_name='redni broj')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type',
                 models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user',
                 models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+',
                                   to=settings.AUTH_USER_MODEL)),
                ('questionnaire', models.ForeignKey(blank=True, db_constraint=False, null=True,
                                                    on_delete=django.db.models.deletion.DO_NOTHING, related_name='+',
                                                    to='psihofon.questionnaire', verbose_name='upitnik')),
            ],
            options={
                'verbose_name': 'historical Odgovor',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(verbose_name='tekst')),
                ('text_sr_latn', models.TextField(null=True, verbose_name='tekst')),
                ('order_number', models.SmallIntegerField(validators=[django.core.validators.MinValueValidator(1),
                                                                      django.core.validators.MaxValueValidator(5)],
                                                          verbose_name='redni broj')),
                ('questionnaire', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers',
                                                    to='psihofon.questionnaire', verbose_name='upitnik')),
            ],
            options={
                'verbose_name': 'Odgovor',
                'verbose_name_plural': 'Odgovori',
                'unique_together': {('questionnaire', 'order_number')},
            },
        ),
    ]
